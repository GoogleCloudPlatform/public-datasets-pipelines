# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
resources:
  - type: bigquery_table
    table_id: "311_service_requests"
    description: "san_francisco_etl_process"
dag:
  airflow_version: 2
  initialize:
    dag_id: san_francisco
    default_args:
      owner: "Google"
      depends_on_past: False
      start_date: '2021-03-01'
    max_active_runs: 1
    schedule_interval: "@daily"
    catchup: False
    default_view: graph
  tasks:
    - operator: "GKECreateClusterOperator"
      args:
        task_id: "create_cluster"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        body:
          name: san-francisco
          initial_node_count: 4
          network: "{{ var.value.vpc_network }}"
          node_config:
            machine_type: e2-standard-16
            oauth_scopes:
              - https://www.googleapis.com/auth/devstorage.read_write
              - https://www.googleapis.com/auth/cloud-platform
    - operator: "GKEStartPodOperator"
      description: "Run New York 311 Service Requests Pipeline"
      args:
        task_id: "sf_311_service_requests"
        name: "sf_311_service_requests"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: san-francisco
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.san_francisco.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "{{ var.json.san_francisco.sf_311_service_requests.pipeline_name }}"
          SOURCE_URL: "{{ var.json.san_francisco.sf_311_service_requests.source_url }}"
          CHUNKSIZE: "{{ var.json.san_francisco.sf_311_service_requests.chunksize }}"
          SOURCE_FILE: "files/data.csv"
          TARGET_FILE: "files/data_output.csv"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "{{ var.json.san_francisco.sf_311_service_requests.dataset_id }}"
          TABLE_ID: "{{ var.json.san_francisco.sf_311_service_requests.destination_table }}"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "{{ var.json.san_francisco.sf_311_service_requests.target_gcs_path }}"
          SCHEMA_PATH: "{{ var.json.san_francisco.sf_311_service_requests.schema_path }}"
          RENAME_HEADERS_LIST: >-
            {
              "CaseID": "unique_key",
              "Opened": "created_date",
              "Closed": "closed_date",
              "Updated": "resolution_action_updated_date",
              "Status": "status",
              "Status Notes": "status_notes",
              "Responsible Agency": "agency_name",
              "Category": "category",
              "Request Type": "complaint_type",
              "Request Details": "descriptor",
              "Address": "incident_address",
              "Supervisor District": "supervisor_district",
              "Neighborhood": "neighborhood",
              "Point": "location",
              "Source": "source",
              "Media URL": "media_url",
              "Latitude": "latitude",
              "Longitude": "longitude",
              "Police District": "police_district"
            }
          EMPTY_KEY_LIST: >-
            [
              "unique_key"
            ]
          RESOLVE_DATATYPES_LIST: >-
            {
              "supervisor_district": "Int64"
            }
          REMOVE_PAREN_LIST: >-
            [
              "latitude",
              "longitude"
            ]
          STRIP_NEWLINES_LIST: >-
            [
              "status_notes",
              "descriptor"
            ]
          STRIP_WHITESPACE_LIST: >-
            [
              "incident_address"
            ]
          DATE_FORMAT_LIST: >-
            [
              "created_date",
              "closed_date",
              "resolution_action_updated_date"
            ]
          REORDER_HEADERS_LIST: >-
            [
                "unique_key",
                "created_date",
                "closed_date",
                "resolution_action_updated_date",
                "status",
                "status_notes",
                "agency_name",
                "category",
                "complaint_type",
                "descriptor",
                "incident_address",
                "supervisor_district",
                "neighborhood",
                "location",
                "source",
                "media_url",
                "latitude",
                "longitude",
                "police_district"
            ]
        resources:
          limit_memory: "8G"
          limit_cpu: "3"
    - operator: "GKEStartPodOperator"
      description: "Run San Francisco Bikeshare Stations Pipeline"
      args:
        task_id: "sf_bikeshare_stations"
        name: "bikeshare_stations"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: san-francisco
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.san_francisco.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "{{ var.json.san_francisco.sf_citibike_stations.pipeline_name }}"
          SOURCE_URL: "{{ var.json.san_francisco.sf_citibike_stations.source_url }}"
          CHUNKSIZE: "{{ var.json.san_francisco.sf_citibike_stations.chunksize }}"
          SOURCE_FILE: "files/data.csv"
          TARGET_FILE: "files/data_output.csv"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "{{ var.json.san_francisco.sf_citibike_stations.dataset_id }}"
          TABLE_ID: "{{ var.json.san_francisco.sf_citibike_stations.destination_table }}"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "{{ var.json.san_francisco.sf_citibike_stations.target_gcs_path }}"
          SCHEMA_PATH: "{{ var.json.san_francisco.sf_citibike_stations.schema_path }}"
          RENAME_HEADERS_LIST: >-
            {
              "data.stations.station_id": "station_id",
              "data.stations.name": "name",
              "data.stations.short_name": "short_name",
              "data.stations.lat": "lat",
              "data.stations.lon": "lon",
              "data.stations.region_id": "region_id",
              "data.stations.rental_methods": "rental_methods",
              "data.stations.capacity": "capacity",
              "data.stations.eightd_has_key_dispenser": "eightd_has_key_dispenser",
              "data.stations.has_kiosk": "has_kiosk",
              "data.stations.external_id": "external_id"
            }
          EMPTY_KEY_LIST: >-
            [
              "station_id",
              "name",
              "lat",
              "lon"
            ]
          GEN_LOCATION_LIST: >-
            {
              "station_geom": [ "lon", "lat" ]
            }
          RESOLVE_DATATYPES_LIST: >-
            {
              "region_id": "Int64"
            }
          REMOVE_PAREN_LIST: >-
            [
              "latitude",
              "longitude"
            ]
          STRIP_WHITESPACE_LIST: >-
            [
              "incident_address"
            ]
          DATE_FORMAT_LIST: >-
            [
              "created_date",
              "closed_date",
              "resolution_action_updated_date"
            ]
          REORDER_HEADERS_LIST: >-
            [
              "station_id",
              "name",
              "short_name",
              "lat",
              "lon",
              "region_id",
              "rental_methods",
              "capacity",
              "external_id",
              "eightd_has_key_dispenser",
              "has_kiosk",
              "station_geom"
            ]
        resources:
          limit_memory: "8G"
          limit_cpu: "3"
    - operator: "GKEStartPodOperator"
      description: "Run San Francisco Bikeshare Status Pipeline"
      args:
        task_id: "sf_bikeshare_status"
        name: "bikeshare_status"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: san-francisco
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.san_francisco.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "{{ var.json.san_francisco.sf_bikeshare_status.pipeline_name }}"
          SOURCE_URL: "{{ var.json.san_francisco.sf_bikeshare_status.source_url }}"
          CHUNKSIZE: "{{ var.json.san_francisco.sf_bikeshare_status.chunksize }}"
          SOURCE_FILE: "files/data.csv"
          TARGET_FILE: "files/data_output.csv"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "{{ var.json.san_francisco.sf_bikeshare_status.dataset_id }}"
          TABLE_ID: "{{ var.json.san_francisco.sf_bikeshare_status.destination_table }}"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "{{ var.json.san_francisco.sf_bikeshare_status.target_gcs_path }}"
          SCHEMA_PATH: "{{ var.json.san_francisco.sf_bikeshare_status.schema_path }}"
          RENAME_HEADERS_LIST: >-
            {
              "data.stations.eightd_has_available_keys": "eightd_has_available_keys",
              "data.stations.is_installed": "is_installed",
              "data.stations.is_renting": "is_renting",
              "data.stations.is_returning": "is_returning",
              "data.stations.last_reported": "last_reported",
              "data.stations.num_bikes_available": "num_bikes_available",
              "data.stations.num_bikes_disabled": "num_bikes_disabled",
              "data.stations.num_docks_available": "num_docks_available",
              "data.stations.num_docks_disabled": "num_docks_disabled",
              "data.stations.num_ebikes_available": "num_ebikes_available",
              "data.stations.station_id": "station_id"
            }
          EMPTY_KEY_LIST: >-
            [
              "station_id",
              "num_bikes_available",
              "num_docks_available",
              "is_installed",
              "is_renting",
              "is_returning",
              "last_reported"
            ]
          REORDER_HEADERS_LIST: >-
            [
              "station_id",
              "num_bikes_available",
              "num_bikes_disabled",
              "num_docks_available",
              "num_docks_disabled",
              "is_installed",
              "is_renting",
              "is_returning",
              "last_reported",
              "num_ebikes_available",
              "eightd_has_available_keys",
            ]
        resources:
          limit_memory: "8G"
          limit_cpu: "3"
    - operator: "GKEStartPodOperator"
      description: "Run New York 311 Service Requests Pipeline"
      args:
        task_id: "sf_bikeshare_trips"
        name: "sf_bikeshare_trips"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: san-francisco
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.san_francisco.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "{{ var.json.san_francisco.sf_bikeshare_trips.pipeline_name }}"
          SOURCE_URL_LIST: |
            "https://s3.amazonaws.com/fordgobike-data/201803-fordgobike-tripdata.csv.zip",
            "https://s3.amazonaws.com/fordgobike-data/201804-fordgobike-tripdata.csv.zip",
            "https://s3.amazonaws.com/fordgobike-data/201802-fordgobike-tripdata.csv.zip",
            "https://s3.amazonaws.com/fordgobike-data/201801-fordgobike-tripdata.csv.zip",
            "https://s3.amazonaws.com/fordgobike-data/2017-fordgobike-tripdata.csv",
            "https://s3.amazonaws.com/babs-open-data/babs_open_data_year_1.zip",
            "https://s3.amazonaws.com/babs-open-data/babs_open_data_year_2.zip",
            "https://s3.amazonaws.com/babs-open-data/babs_open_data_year_3.zip"
          CHUNKSIZE: "{{ var.json.san_francisco.sf_bikeshare_trips.chunksize }}"
          SOURCE_FILE: "files/data.csv"
          TARGET_FILE: "files/data_output.csv"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "{{ var.json.san_francisco.sf_bikeshare_trips.dataset_id }}"
          TABLE_ID: "{{ var.json.san_francisco.sf_bikeshare_trips.destination_table }}"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "{{ var.json.san_francisco.sf_bikeshare_trips.target_gcs_path }}"
          SCHEMA_PATH: "{{ var.json.san_francisco.sf_bikeshare_trips.schema_path }}"
          TRIP_DATA_NAMES: >-
            [
              "source_file",
              "trip_id",
              "duration_sec",
              "start_date",
              "start_station_name",
              "start_station_terminal",
              "end_date",
              "end_station_name",
              "end_station_terminal",
              "bike_number",
              "subscription_type",
              "zip_code"
            ]
          TRIP_DATA_DTYPES: >-
            {
              "source_file": "str",
              "trip_id": "str",
              "duration_sec": "str",
              "start_date": "str",
              "start_station_name": "str",
              "start_station_terminal": "str",
              "end_date": "str",
              "end_station_name": "str",
              "end_station_terminal": "str",
              "bike_number": "str",
              "subscription_type": "str",
              "zip_code": "str"
            }
          TRIPDATA_NAMES: >-
            [
              "source_file",
              "duration_sec",
              "start_date",
              "end_date",
              "start_station_terminal",
              "start_station_name",
              "start_station_latitude",
              "start_station_longitude",
              "end_station_terminal",
              "end_station_name",
              "end_station_latitude",
              "end_station_longitude",
              "bike_number",
              "subscriber_type",
              "member_birth_year",
              "member_gender",
              "bike_share_for_all_trip"
            ]
          TRIPDATA_DTYPES: >-
            {
                "source_file": "str",
                "duration_sec": "int",
                "start_date": "str",
                "end_date": "str",
                "start_station_terminal": "int",
                "start_station_name": "str",
                "start_station_latitude": "float",
                "start_station_longitude": "float",
                "end_station_terminal": "int",
                "end_station_name": "str",
                "end_station_latitude": "float",
                "end_station_longitude": "float",
                "bike_number": "int",
                "subscriber_type": "str",
                "member_birth_year": "str",
                "member_gender": "str",
                "bike_share_for_all_trip": "str"
            }
          RENAME_HEADERS_TRIPDATA: >-
            {
              "duration_sec": "Duration",
              "start_time": "Start Date",
              "start_station_name": "Start Station",
              "start_station_id": "Start Terminal",
              "end_time": "End Date",
              "end_station_name": "End Station",
              "end_station_id": "End Terminal",
              "bike_id": "Bike #",
              "user_type": "Subscription Type",
              "start_station_latitude": "start_station_latitude",
              "start_station_longitude": "start_station_longitude",
              "end_station_latitude": "end_station_latitude",
              "end_station_longitude": "end_station_longitude",
              "member_birth_year": "member_birth_year",
              "member_gender": "member_gender",
              "bike_share_for_all_trip": "bike_share_for_all_trip"
            }
          RENAME_HEADERS_LIST: >-
            {
              "trip_id": "trip_id",
              "duration_sec": "duration_sec",
              "start_date": "start_date",
              "start_station_name": "start_station_name",
              "start_station_terminal": "start_station_id",
              "end_date": "end_date",
              "end_station_name": "end_station_name",
              "end_station_terminal": "end_station_id",
              "bike_number": "bike_number",
              "zip_code": "zip_code",
              "subscriber_type_new": "subscriber_type",
              "subscription_type": "subscription_type",
              "start_station_latitude": "start_station_latitude",
              "start_station_longitude": "start_station_longitude",
              "end_station_latitude": "end_station_latitude",
              "end_station_longitude": "end_station_longitude",
              "member_birth_year": "member_birth_year",
              "member_gender": "member_gender",
              "bike_share_for_all_trip": "bike_share_for_all_trip",
              "start_station_geom": "start_station_geom",
              "end_station_geom": "end_station_geom"
            }
          RESOLVE_DATATYPES_LIST: >-
            {
              "member_birth_year": "Int64"
            }
          DATE_FORMAT_LIST: >-
            [
              "start_date",
              "end_date"
            ]
          GEN_LOCATION_LIST: >-
            {
              "start_station_geom": [ "start_station_longitude", "start_station_latitude" ],
              "end_station_geom": [ "end_station_longitude", "end_station_latitude" ]
            }
          REORDER_HEADERS_LIST: >-
            [
              "trip_id",
              "duration_sec",
              "start_date",
              "start_station_name",
              "start_station_id",
              "end_date",
              "end_station_name",
              "end_station_id",
              "bike_number",
              "zip_code",
              "subscriber_type",
              "subscription_type",
              "start_station_latitude",
              "start_station_longitude",
              "end_station_latitude",
              "end_station_longitude",
              "member_birth_year",
              "member_gender",
              "bike_share_for_all_trip",
              "start_station_geom",
              "end_station_geom"
            ]
        resources:
          limit_memory: "8G"
          limit_cpu: "3"
    - operator: "GKEDeleteClusterOperator"
      args:
        task_id: "delete_cluster"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        name: san-francisco

  graph_paths:
    - "transform_csv >> load_to_bq"
