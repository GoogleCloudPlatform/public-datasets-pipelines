# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
resources:
  - type: bigquery_table
    table_id: "ghcnd_by_year"
    description: "noaaspc"
  - type: bigquery_table
    table_id: "ghcnd_countries"
    description: "noaaspc"
  - type: bigquery_table
    table_id: "ghcnd_inventory"
    description: "noaaspc"
  - type: bigquery_table
    table_id: "ghcnd_states"
    description: "noaaspc"
  - type: bigquery_table
    table_id: "ghcnd_stations"
    description: "noaaspc"
  - type: bigquery_table
    table_id: "gsod_stations"
    description: "noaaspc"
  - type: bigquery_table
    table_id: "hurricanes"
    description: "noaaspc"
  - type: bigquery_table
    table_id: "lightning_strikes_by_year"
    description: "noaaspc"

dag:
  airflow_version: 2
  initialize:
    dag_id: noaa
    default_args:
      owner: "Google"
      depends_on_past: False
      start_date: '2021-03-01'
    max_active_runs: 1
    schedule_interval: "0 1 0 0 6"
    catchup: False
    default_view: graph

  tasks:
    - operator: "GKECreateClusterOperator"
      args:
        task_id: "create_cluster"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        body:
          name: noaa
          initial_node_count: 8
          network: "{{ var.value.vpc_network }}"
          node_config:
            machine_type: e2-standard-16
            oauth_scopes:
              - https://www.googleapis.com/auth/devstorage.read_write
              - https://www.googleapis.com/auth/cloud-platform
    - operator: "GKEStartPodOperator"
      description: "Run NOAA load processes"
      args:
        task_id: "ghcnd_by_year"
        name: "noaa.ghcnd_by_year"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: noaa
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.noaa.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "{{ var.json.noaa.ghcnd_by_year.pipeline_name }}"
          SOURCE_URL: "{{ var.json.noaa.ghcnd_by_year.source_url }}"
          SOURCE_FILE: "{{ var.json.noaa.ghcnd_by_year.source_file }}"
          TARGET_FILE: "{{ var.json.noaa.ghcnd_by_year.target_file }}"
          CHUNKSIZE: "{{ var.json.noaa.ghcnd_by_year.chunksize }}"
          FTP_HOST: "{{ var.json.noaa.ghcnd_by_year.ftp_host }}"
          FTP_DIR: "{{ var.json.noaa.ghcnd_by_year.ftp_dir }}"
          FTP_FILENAME: "{{ var.json.noaa.ghcnd_by_year.ftp_filename }}"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "{{ var.json.noaa.ghcnd_by_year.dataset_id }}"
          TABLE_ID: "{{ var.json.noaa.ghcnd_by_year.table_id }}"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "{{ var.json.noaa.ghcnd_by_year.target_gcs_path }}"
          SCHEMA_PATH: "{{ var.json.noaa.ghcnd_by_year.schema_path }}"
          DROP_DEST_TABLE: "{{ var.json.noaa.ghcnd_by_year.drop_dest_table }}"
          INPUT_FIELD_DELIMITER: ","
          FTP_BATCH_SIZE: "{{ var.json.noaa.ghcnd_by_year.ftp_batch_size }}"
          FTP_BATCH_SLEEP_TIME: "{{ var.json.noaa.ghcnd_by_year.ftp_batch_sleep_time }}"
          FULL_DATA_LOAD: "{{ var.json.noaa.ghcnd_by_year.full_data_load }}"
          START_YEAR: "{{ var.json.noaa.ghcnd_by_year.start_year }}"
          REMOVE_SOURCE_FILE: "{{ var.json.noaa.ghcnd_by_year.remove_source_file }}"
          DELETE_TARGET_FILE: "{{ var.json.noaa.ghcnd_by_year.delete_target_file }}"
          INPUT_CSV_HEADERS: >-
            [
              "id",
              "date",
              "element",
              "value",
              "mflag",
              "qflag",
              "sflag",
              "time"
            ]
          DATA_DTYPES: >-
            {
              "id": "str",
              "date": "str",
              "element": "str",
              "value": "str",
              "mflag": "str",
              "qflag": "str",
              "sflag": "str",
              "time": "str"
            }
          OUTPUT_CSV_HEADERS: >-
            [
              "id",
              "date",
              "element",
              "value",
              "mflag",
              "qflag",
              "sflag",
              "time",
              "source_url",
              "etl_timestamp"
            ]
          REORDER_HEADERS_LIST: >-
            [
              "id",
              "date",
              "element",
              "value",
              "mflag",
              "qflag",
              "sflag",
              "time",
              "source_url",
              "etl_timestamp"
            ]
          NULL_ROWS_LIST: >-
            [
              "id"
            ]
          DATE_FORMAT_LIST: >-
            [
              "date"
            ]
      resources:
          request_ephemeral_storage: "16G"
          limit_cpu: "3"
    - operator: "GKEStartPodOperator"
      description: "Run NOAA load processes"
      args:
        task_id: "ghcnd_countries"
        name: "noaa.ghcnd_countries"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: noaa
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.noaa.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "{{ var.json.noaa.ghcnd_countries.pipeline_name }}"
          SOURCE_URL: "{{ var.json.noaa.ghcnd_countries.source_url }}"
          SOURCE_FILE: "{{ var.json.noaa.ghcnd_countries.source_file }}"
          TARGET_FILE: "{{ var.json.noaa.ghcnd_countries.target_file }}"
          CHUNKSIZE: "{{ var.json.noaa.ghcnd_countries.chunksize }}"
          FTP_HOST: "{{ var.json.noaa.ghcnd_countries.ftp_host }}"
          FTP_DIR: "{{ var.json.noaa.ghcnd_countries.ftp_dir }}"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "{{ var.json.noaa.ghcnd_countries.dataset_id }}"
          TABLE_ID: "{{ var.json.noaa.ghcnd_countries.table_id }}"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "{{ var.json.noaa.ghcnd_countries.target_gcs_path }}"
          SCHEMA_PATH: "{{ var.json.noaa.ghcnd_countries.schema_path }}"
          DROP_DEST_TABLE: "{{ var.json.noaa.ghcnd_countries.drop_dest_table }}"
          INPUT_FIELD_DELIMITER: "{{ var.json.noaa.ghcnd_countries.input_field_delimiter }}"
          REMOVE_SOURCE_FILE: "{{ var.json.noaa.ghcnd_countries.remove_source_file }}"
          DELETE_TARGET_FILE: "{{ var.json.noaa.ghcnd_countries.delete_target_file }}"
          INPUT_CSV_HEADERS: >-
            [
              "textdata"
            ]
          DATA_DTYPES: >-
            {
              "textdata": "str"
            }
          OUTPUT_CSV_HEADERS: >-
            [
              "code",
              "name",
              "source_url",
              "etl_timestamp"
            ]
          REORDER_HEADERS_LIST: >-
            [
              "code",
              "name",
              "source_url",
              "etl_timestamp"
            ]
          SLICE_COLUMN_LIST: >-
            {
              "code": ["textdata", "0", "2"],
              "name": ["textdata", "3", ""]
            }
      resources:
          request_ephemeral_storage: "4G"
          limit_cpu: "3"
    - operator: "GKEStartPodOperator"
      description: "Run NOAA load processes"
      args:
        task_id: "ghcnd_inventory"
        name: "noaa.ghcnd_inventory"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: noaa
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.noaa.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "{{ var.json.noaa.ghcnd_inventory.pipeline_name }}"
          SOURCE_URL: "{{ var.json.noaa.ghcnd_inventory.source_url }}"
          SOURCE_FILE: "{{ var.json.noaa.ghcnd_inventory.source_file }}"
          TARGET_FILE: "{{ var.json.noaa.ghcnd_inventory.target_file }}"
          CHUNKSIZE: "{{ var.json.noaa.ghcnd_inventory.chunksize }}"
          FTP_HOST: "{{ var.json.noaa.ghcnd_inventory.ftp_host }}"
          FTP_DIR: "{{ var.json.noaa.ghcnd_inventory.ftp_dir }}"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "{{ var.json.noaa.ghcnd_inventory.dataset_id }}"
          TABLE_ID: "{{ var.json.noaa.ghcnd_inventory.table_id }}"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "{{ var.json.noaa.ghcnd_inventory.target_gcs_path }}"
          SCHEMA_PATH: "{{ var.json.noaa.ghcnd_inventory.schema_path }}"
          DROP_DEST_TABLE: "{{ var.json.noaa.ghcnd_inventory.drop_dest_table }}"
          INPUT_FIELD_DELIMITER: "{{ var.json.noaa.ghcnd_inventory.input_field_delimiter }}"
          REMOVE_SOURCE_FILE: "{{ var.json.noaa.ghcnd_inventory.remove_source_file }}"
          DELETE_TARGET_FILE: "{{ var.json.noaa.ghcnd_inventory.delete_target_file }}"
          INPUT_CSV_HEADERS: >-
            [
              "textdata"
            ]
          DATA_DTYPES: >-
            {
              "textdata": "str"
            }
          OUTPUT_CSV_HEADERS: >-
            [
              "id",
              "latitude",
              "longitude",
              "element",
              "firstyear",
              "lastyear",
              "source_url",
              "etl_timestamp"
            ]
          REORDER_HEADERS_LIST: >-
            [
              "id",
              "latitude",
              "longitude",
              "element",
              "firstyear",
              "lastyear",
              "source_url",
              "etl_timestamp"
            ]
          SLICE_COLUMN_LIST: >-
            {
              "id": ["textdata", "0", "11"],
              "latitude": ["textdata", "12", "20"],
              "longitude": ["textdata", "21", "30"],
              "element": ["textdata", "31", "35"],
              "firstyear": ["textdata", "36", "40"],
              "lastyear": ["textdata", "41", "45"]
            }
      resources:
          request_ephemeral_storage: "4G"
          limit_cpu: "3"
    - operator: "GKEDeleteClusterOperator"
      args:
        task_id: "delete_cluster"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        name: noaa
    - operator: "GKEStartPodOperator"
      description: "Run NOAA load processes"
      args:
        task_id: "ghcnd_states"
        name: "noaa.ghcnd_states"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: noaa
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.noaa.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "{{ var.json.noaa.ghcnd_states.pipeline_name }}"
          SOURCE_URL: "{{ var.json.noaa.ghcnd_states.source_url }}"
          SOURCE_FILE: "{{ var.json.noaa.ghcnd_states.source_file }}"
          TARGET_FILE: "{{ var.json.noaa.ghcnd_states.target_file }}"
          CHUNKSIZE: "{{ var.json.noaa.ghcnd_states.chunksize }}"
          FTP_HOST: "{{ var.json.noaa.ghcnd_states.ftp_host }}"
          FTP_DIR: "{{ var.json.noaa.ghcnd_states.ftp_dir }}"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "{{ var.json.noaa.ghcnd_states.dataset_id }}"
          TABLE_ID: "{{ var.json.noaa.ghcnd_states.table_id }}"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "{{ var.json.noaa.ghcnd_states.target_gcs_path }}"
          SCHEMA_PATH: "{{ var.json.noaa.ghcnd_states.schema_path }}"
          DROP_DEST_TABLE: "{{ var.json.noaa.ghcnd_states.drop_dest_table }}"
          INPUT_FIELD_DELIMITER: "{{ var.json.noaa.ghcnd_states.input_field_delimiter }}"
          REMOVE_SOURCE_FILE: "{{ var.json.noaa.ghcnd_states.remove_source_file }}"
          DELETE_TARGET_FILE: "{{ var.json.noaa.ghcnd_states.delete_target_file }}"
          INPUT_CSV_HEADERS: >-
            [
              "textdata"
            ]
          DATA_DTYPES: >-
            {
              "textdata": "str"
            }
          OUTPUT_CSV_HEADERS: >-
            [
              "code",
              "name",
              "source_url",
              "etl_timestamp"
            ]
          REORDER_HEADERS_LIST: >-
            [
              "code",
              "name",
              "source_url",
              "etl_timestamp"
            ]
          SLICE_COLUMN_LIST: >-
            {
              "code": ["textdata", "0", "2"],
              "name": ["textdata", "3", ""]
            }
    - operator: "GKEStartPodOperator"
      description: "Run NOAA load processes"
      args:
        task_id: "ghcnd_stations"
        name: "noaa.ghcnd_stations"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: noaa
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.noaa.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "{{ var.json.noaa.ghcnd_stations.pipeline_name }}"
          SOURCE_URL: "{{ var.json.noaa.ghcnd_stations.source_url }}"
          SOURCE_FILE: "{{ var.json.noaa.ghcnd_stations.source_file }}"
          TARGET_FILE: "{{ var.json.noaa.ghcnd_stations.target_file }}"
          CHUNKSIZE: "{{ var.json.noaa.ghcnd_stations.chunksize }}"
          FTP_HOST: "{{ var.json.noaa.ghcnd_stations.ftp_host }}"
          FTP_DIR: "{{ var.json.noaa.ghcnd_stations.ftp_dir }}"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "{{ var.json.noaa.ghcnd_stations.dataset_id }}"
          TABLE_ID: "{{ var.json.noaa.ghcnd_stations.table_id }}"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "{{ var.json.noaa.ghcnd_stations.target_gcs_path }}"
          SCHEMA_PATH: "{{ var.json.noaa.ghcnd_stations.schema_path }}"
          DROP_DEST_TABLE: "{{ var.json.noaa.ghcnd_stations.drop_dest_table }}"
          INPUT_FIELD_DELIMITER: "{{ var.json.noaa.ghcnd_stations.input_field_delimiter }}"
          REMOVE_SOURCE_FILE: "{{ var.json.noaa.ghcnd_stations.remove_source_file }}"
          DELETE_TARGET_FILE: "{{ var.json.noaa.ghcnd_stations.delete_target_file }}"
          INPUT_CSV_HEADERS: >-
            [
              "textdata"
            ]
          DATA_DTYPES: >-
            {
              "textdata": "str"
            }
          OUTPUT_CSV_HEADERS: >-
            [
              "id",
              "latitude",
              "longitude",
              "elevation",
              "state",
              "name",
              "gsn_flag",
              "hcn_cm_flag",
              "wmoid",
              "source_url",
              "etl_timestamp"
            ]
          REORDER_HEADERS_LIST: >-
            [
              "id",
              "latitude",
              "longitude",
              "elevation",
              "state",
              "name",
              "gsn_flag",
              "hcn_cm_flag",
              "wmoid",
              "source_url",
              "etl_timestamp"
            ]
          SLICE_COLUMN_LIST: >-
            {
              "id": ["textdata", "0", "11"],
              "latitude": ["textdata", "12", "20"],
              "longitude": ["textdata", "21", "30"],
              "elevation": ["textdata", "31", "37"],
              "state": ["textdata", "38", "40"],
              "name": ["textdata", "41", "71"],
              "gsn_flag": ["textdata", "72", "75"],
              "hcn_cm_flag": ["textdata", "76", "79"],
              "wmoid": ["textdata", "80", "85"]
            }
    - operator: "GKEStartPodOperator"
      description: "Run NOAA load processes"
      args:
        task_id: "gsod_stations"
        name: "noaa.gsod_stations"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: noaa
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.noaa.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "{{ var.json.noaa.gsod_stations.pipeline_name }}"
          SOURCE_URL: "{{ var.json.noaa.gsod_stations.source_url }}"
          SOURCE_FILE: "{{ var.json.noaa.gsod_stations.source_file }}"
          TARGET_FILE: "{{ var.json.noaa.gsod_stations.target_file }}"
          CHUNKSIZE: "{{ var.json.noaa.gsod_stations.chunksize }}"
          FTP_HOST: "{{ var.json.noaa.gsod_stations.ftp_host }}"
          FTP_DIR: "{{ var.json.noaa.gsod_stations.ftp_dir }}"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "{{ var.json.noaa.gsod_stations.dataset_id }}"
          TABLE_ID: "{{ var.json.noaa.gsod_stations.table_id }}"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "{{ var.json.noaa.gsod_stations.target_gcs_path }}"
          SCHEMA_PATH: "{{ var.json.noaa.gsod_stations.schema_path }}"
          DROP_DEST_TABLE: "{{ var.json.noaa.gsod_stations.drop_dest_table }}"
          INPUT_FIELD_DELIMITER: "{{ var.json.noaa.gsod_stations.input_field_delimiter }}"
          REMOVE_SOURCE_FILE: "{{ var.json.noaa.gsod_stations.remove_source_file }}"
          DELETE_TARGET_FILE: "{{ var.json.noaa.gsod_stations.delete_target_file }}"
          NUMBER_OF_HEADER_ROWS: "{{ var.json.noaa.gsod_stations.number_of_header_rows }}"
          REGEX_LIST: >-
            {
              "lat": ["^(-[0]+)(.*)", "-$2", "True"],
              "lat": ["^(\\s+)$", "", "True"],
              "lat": ["^(\\+\\d+\\.\\d+[0-9])\\s+", "$1", "True"],
              "lat": ["^(-\\d+\\.\\d+[0-9])\\s+", "$1", "True"],
              "lat": ["nan", "", "False"],
              "lon": ["^(-[0]+)(.*)", "-$2", "True"],
              "lon": ["^(\\s+)$", "", "True"],
              "lon": ["^(\\+\\d+\\.\\d+[0-9])\\s+", "$1", "True"],
              "lon": ["^(-\\d+\\.\\d+[0-9])\\s+", "$1", "True"],
              "lon": ["nan", "", "False"],
              "usaf": ["(\\d{1,})(\\s{1,})$", "$1", "True"],
              "name": ["^\\s{1,}([a-zA-Z]\\D+)", "$1", "True"],
              "name": ["^(\\D+[a-zA-Z])\\s{1,}$", "$1", "True"],
              "name": ["^(\\s+)$", "", "True"],
              "call": ["^(\\s+)$", "", "True"],
              "call": ["^([a-zA-Z]+)\\s+", "$1", "True"],
              "elev": ["^(\\s+)$", "", "True"],
              "state": ["^(\\s+)$", "", "True"],
              "country": ["^(\\s+)$", "", "True"]
            }
          INPUT_CSV_HEADERS: >-
            [
              "textdata"
            ]
          DATA_DTYPES: >-
            {
              "textdata": "str"
            }
          OUTPUT_CSV_HEADERS: >-
            [
              "usaf",
              "wban",
              "name",
              "country",
              "state",
              "call",
              "lat",
              "lon",
              "elev",
              "begin",
              "end",
              "source_url",
              "etl_timestamp"
            ]
          REORDER_HEADERS_LIST: >-
            [
              "usaf",
              "wban",
              "name",
              "country",
              "state",
              "call",
              "lat",
              "lon",
              "elev",
              "begin",
              "end",
              "source_url",
              "etl_timestamp"
            ]
          NULL_ROWS_LIST: >-
            [
              "usaf"
            ]
          SLICE_COLUMN_LIST: >-
            {
              "usaf": ["textdata", "0", "6"],
              "wban": ["textdata", "7", "12"],
              "name": ["textdata", "13", "42"],
              "country": ["textdata", "43", "45"],
              "state": ["textdata", "48", "50"],
              "call": ["textdata", "51", "56"],
              "lat": ["textdata", "57", "64"],
              "lon": ["textdata", "65", "74"],
              "elev": ["textdata", "75", "81"],
              "begin": ["textdata", "82", "90"],
              "end": ["textdata", "91", "99"]
            }
      resources:
          request_ephemeral_storage: "4G"
          limit_cpu: "3"

  graph_paths:
    - "transform_csv >> load_to_bq"
