# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
resources:
  - type: bigquery_table
    table_id: "ghcnd_by_year"
    description: "noaaspc"

dag:
  airflow_version: 2
  initialize:
    dag_id: noaa
    default_args:
      owner: "Google"
      depends_on_past: False
      start_date: '2021-03-01'
    max_active_runs: 1
    schedule_interval: "30 1 * * *"
    catchup: False
    default_view: graph

  tasks:
    - operator: "GKECreateClusterOperator"
      args:
        task_id: "create_cluster"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        body:
          name: open_aq
          initial_node_count: 2
          network: "{{ var.value.vpc_network }}"
          node_config:
            machine_type: e2-standard-16
            oauth_scopes:
              - https://www.googleapis.com/auth/devstorage.read_write
              - https://www.googleapis.com/auth/cloud-platform
    - operator: "GKEStartPodOperator"
      description: "Run Open Air Quality load processes"
      args:
        task_id: "open_aq"
        name: "openaq.open_aq"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        cluster_name: open_aq
        namespace: "default"
        image_pull_policy: "Always"
        image: "{{ var.json.open_aq.container_registry.run_csv_transform_kub }}"
        env_vars:
          PIPELINE_NAME: "Open Air Quality"
          SOURCE_URL: >-
            {
              "cities": "https://api.openaq.org/v2/cities?limit=100000&page=1&offset=0&sort=asc&order_by=city",
              "countries": "https://api.openaq.org/v2/countries?limit=100000&page=1&offset=0&sort=asc&order_by=country",
              "locations": "https://api.openaq.org/v2/locations?limit=100&page=1&offset=0&sort=desc&radius=1000&order_by=lastUpdated&dumpRaw=false"
            }
          SOURCE_FILE: "files/data.json"
          TARGET_FILE: "files/data_output.json"
          PROJECT_ID: "{{ var.value.gcp_project }}"
          DATASET_ID: "openaq"
          TARGET_GCS_BUCKET: "{{ var.value.composer_bucket }}"
          TARGET_GCS_PATH: "data/open_aq/.json"
          SCHEMA_PATH: "data/open_aq/schema/openaq_schema.json"
          DROP_DEST_TABLE: "N"
          DATE_FORMAT_LIST: >-
            [
              ["firstUpdated", "%Y-%m-%dT%H:%M:%S%z", "%Y-%m-%d %H:%M:%S" ],
              ["lastUpdated", "%Y-%m-%dT%H:%M:%S%z", "%Y-%m-%d %H:%M:%S" ]
            ]
        resources:
          request_ephemeral_storage: "16G"
          limit_cpu: "3"
    - operator: "GKEDeleteClusterOperator"
      args:
        task_id: "delete_cluster"
        project_id: "{{ var.value.gcp_project }}"
        location: "us-central1-c"
        name: open_aq

  graph_paths:
    - "create_cluster >> [ ghcnd_inventory, spc_hail, spc_wind, spc_tornado, ghcnd_states, ghcnd_stations, gsod_stations, ghcnd_countries] >> storms_database_by_year >> [noaa_goes16_mcmip, noaa_goes16_cmip, noaa_goes16_glm] >> noaa_goes16_radiance >> [noaa_goes17_mcmip, noaa_goes17_cmip, noaa_goes17_glm] >> noaa_goes17_radiance >> [ghcnd_by_year, lightning_strikes_by_year ] >> ghcnd_hurricanes >> [noaa_gsod_2020, noaa_gsod_2022] >> delete_cluster"
